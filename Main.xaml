<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>DocumentFormat.OpenXml.Drawing</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Building a report with data in Excel.&#xA;&#xA;Необходимо создать сводную таблицу, в которой будет отображаться ТО каждого магазина по дням ( даты должны быть в столбцах, коды магазинов в строках)&#xA;Необходимо, чтобы была цветовая индикация ячеек со значениями ТО по каждому магазину и в целом по всем магазинам: если План ТО выполняется - зеленая заливка, если выполнение  План ТО меньше чем  97% - красная.&#xA;Необходимо, чтобы при изменении диапазона дат или списка магазинов, форматирование не слетало.&#xA;&#xA;&#xA;" DisplayName="Report in Excel" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="Input" />
      <Variable x:TypeArguments="sd:DataTable" Name="DixyData" />
      <Variable x:TypeArguments="sd:DataTable" Name="RemovedDuplicatesDates" />
      <Variable x:TypeArguments="sd:DataTable" Name="RemovedDUplicates" />
      <Variable x:TypeArguments="sd:DataTable" Name="Dates" />
      <Variable x:TypeArguments="x:Int32" Name="Count" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Column_Name" />
      <Variable x:TypeArguments="x:Int32" Name="Column_Number" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt" />
      <Variable x:TypeArguments="sd:DataTable" Name="ActualPercentage" />
      <Variable x:TypeArguments="sd:DataTable" Name="Plan" />
      <Variable x:TypeArguments="sd:DataTable" Name="wholeTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="percentsdecimal" />
      <Variable x:TypeArguments="ui:GenericValue" Name="i" />
      <Variable x:TypeArguments="sd:DataTable" Name="collorcell" />
      <Variable x:TypeArguments="x:Int32" Name="counter" />
      <Variable x:TypeArguments="ui:GenericValue" Name="actPercent" />
      <Variable x:TypeArguments="sd:DataTable" Name="ToDt" />
      <Variable x:TypeArguments="sd:DataTable" Name="allpercents" />
    </Sequence.Variables>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Data normalization" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Workbook="[Input]" WorkbookPath="Input.xlsm">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">1</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[wholeTable]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" SheetName="RawData">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[ToDt]" DisplayName="Read Range TO" sap2010:WorkflowViewState.IdRef="ExcelReadRange_14" Range="C1:C821" SheetName="RawData" />
            <ui:ExcelReadRange AddHeaders="False" DataTable="[allpercents]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="E1:E821" SheetName="RawData" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[DixyData]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A1:A821" SheetName="RawData" />
            <ui:RemoveDuplicateRows DataTable="[DixyData]" DisplayName="Remove Duplicate Rows" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_1" OutputDataTable="[RemovedDUplicates]" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[Dates]" DisplayName="Read Dates первоначальное считывание дат" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="B2:B821" SheetName="RawData" />
            <ui:RemoveDuplicateRows DataTable="[Dates]" DisplayName="Remove Duplicate Rows" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_3" OutputDataTable="[RemovedDuplicatesDates]" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[ActualPercentage]" DisplayName="Read Range Actual Percentage" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="I2:I821" SheetName="RawData" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[Plan]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="F1:F821" SheetName="RawData" />
            <ui:WriteRange AddHeaders="False" DataTable="[RemovedDUplicates]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="Result" StartingCell="A2" WorkbookPath="DixyReport.xlsx" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_66">
      <Assign.To>
        <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="ui:GenericValue">[0]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Removing vertical presentation " sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" WorkbookPath="DixyReport.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_25">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_60">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">2</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelDeleteRange DisplayName="Delete Range" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_4" Range="B1:B41" SheetName="Result" ShiftCells="False" ShiftOption="ShiftUp" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[RemovedDuplicatesDates]" DisplayName="For each row to transpose data into new sheet" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_29">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Column_Number]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
              <Assign.To>
                <OutArgument x:TypeArguments="ui:GenericValue">[Column_Name]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="ui:GenericValue">[String.Empty]</InArgument>
              </Assign.Value>
            </Assign>
            <While sap2010:WorkflowViewState.IdRef="While_9" Condition="[Column_Number&gt;0]">
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="modulo" />
                </Sequence.Variables>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[modulo]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[(Column_Number-1) Mod 26]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[Column_Name]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[Convert.ToChar(65 + modulo).ToString()+Column_Name]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[Column_Number]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32((Column_Number - modulo) / 26)]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </While>
            <ui:WriteCell Cell="[Column_Name.Trim+&quot;1&quot;]" DisplayName="Write cell" sap2010:WorkflowViewState.IdRef="WriteCell_6" SheetName="Result" Text="[row(0).ToString]" WorkbookPath="DixyReport.xlsx" />
            <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[Count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Count+1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Formating workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Formating.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <sads:DebugSymbol.Symbol>d0ZFOlxZYW5cRGVsb2l0dGVcUlBBXFVpUGF0aCB0cmFpbmluZyBleGVyY2lzZXNcRGl4eVxEaXh5XFByb2RcTWFpbi54YW1sWkUD4wEOAgEBWwV9IAIBOn4FhQEOAgE2hgEFmQEgAgEsmgEF3AEVAgEE3QEF4QEdAgECW5cBW6ABAgF0W64BW7oBAgFzYQt6FgIBO4MBN4MBOgIBOYABOIABOwIBN4YBqAGGAbkBAgE1jAELlgEWAgEtmgE2mgFQAgEqoAEL2QEWAgEF3QG2Ad0BxgECAQNiDWkWAgFvag1wIQIBanENcbsBAgFlcg1yvwECAWBzDXO7AQIBW3QNdMABAgFWdQ111gECAVF2DXbCAQIBTHcNd9UBAgFHeA14twECAUJ5DXneAQIBPI0BDZQBFgIBMZUBDZUBvwECAS6hAQ2oARYCASWpAQ2wARYCASGxAQ3PARUCARDQAQ3QAdcBAgEL0QEN2AEWAgEGZzdnOAIBcmQ4ZD8CAXBqPGpKAgFtbRNtQgIBbGqhAWqqAQIBa3E8cUQCAWhxmwFxpAECAWdxrwFxuAECAWZyPXJMAgFjcp8BcqgBAgFicrMBcrwBAgFhczxzSAIBXnObAXOkAQIBXXOvAXO4AQIBXHSoAXS9AQIBWXQvdDsCAVd1PHVFAgFUdbYBdb8BAgFTdcoBddMBAgFSdqUBdr8BAgFPdi92OAIBTXc8d1ACAUp3tQF3vgECAUl3yQF30gECAUh4PHhEAgFFeJcBeKABAgFEeKsBeLQBAgFDebgBebwBAgFBeTl5TgIBP3miAXmqAQIBPnnKAXnbAQIBPZIBN5IBOAIBNI8BOI8BPwIBMpUBeJUBgAECATCVAYsBlQGTAQIBL6YBN6YBPgIBKKMBOKMBRwIBJq4BP64BTQIBJKsBQKsBTQIBIrIBD84BGgIBE7EBSLEBXgIBEdABINABQgIBD9ABogHQAbUBAgEO0AGUAdABnAECAQ3QAcMB0AHUAQIBDNYBN9YBQAIBCdMBONMBPwIBB7YBEb0BGgIBHL4BEcUBGgIBGMYBEc0BGgIBFLsBO7sBVQIBH7gBPLgBRAIBHcMBQ8MBdwIBG8ABRMABUQIBGcsBO8sBawIBF8gBPMgBSwIBFQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_8" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_14" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_9" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="RemoveDuplicateRows_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="ExcelReadRange_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="RemoveDuplicateRows_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="ExcelReadRange_6" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_7" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WriteRange_4" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="336,1156">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="516,1265">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ExcelDeleteRange_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_2" sap:VirtualizedContainerService.HintSize="516,355">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_9" sap:VirtualizedContainerService.HintSize="464,542">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteCell_6" sap:VirtualizedContainerService.HintSize="464,115" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="486,1121">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_9" sap:VirtualizedContainerService.HintSize="516,1269">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="516,87" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="538,3512">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="578,3632" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>